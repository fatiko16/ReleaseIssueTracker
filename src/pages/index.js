import Head from "next/head";
import Button from "../components/button";
import { useState } from "react";
import ReleaseList from "../components/release-list";
import domain from "../constants/domain";
import { useAllReleaseData, useAddNewRelease } from "../lib/release";

export default function Home() {
  const {
    isLoading,
    isError,
    data,
    error: fetchReleaseError,
  } = useAllReleaseData();
  const { mutate } = useAddNewRelease();
  console.log(data);
  const [releaseInput, setReleaseInput] = useState("");
  const [error, setError] = useState(null);

  function resetReleaseInput() {
    setReleaseInput("");
    setError(null);
  }

  async function createRelease(name) {
    if (releaseInput !== null && releaseInput.trim().length > 0) {
      mutate(releaseInput, { onSuccess: resetReleaseInput });
    } else {
      setError("Release input cannot be empty");
    }
  }

  return (
    <>
      <Head>
        <title>Release Issue Tracker</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className="w-10/12 flex items-center justify-center flex-col gap-8">
        <h1 className="text-4xl font-semibold text-yellow-300">
          Release Issue Tracker
        </h1>
        <div className="w-8/12 text-start">
          <label htmlFor="release" className="text-lg font-bold">
            Create a new release:
            <input
              type="text"
              id="release"
              className="w-full mt-2 rounded h-9 px-2"
              required
              value={releaseInput}
              onChange={(e) => setReleaseInput(e.target.value)}
            />
          </label>
          {error && (
            <p className="mt-2 text-red-600 font-semibold text-lg">{error}</p>
          )}
          <Button
            description="Create"
            onClick={() => createRelease(releaseInput)}
            type="button"
          />
        </div>
        {isLoading && <p>Releases are loading...</p>}
        {isError && <p>Something went wrong with fetching releases.</p>}
        {data && <ReleaseList releases={data.releases} />}
        {mutate.isLoading && <p>Adding the new release.</p>}
      </div>
    </>
  );
}
